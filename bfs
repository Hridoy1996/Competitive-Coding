vector<int> adj[N];
int dis[N];
int par[N];
bool visited[N];

void findPath(int const &startNode, int const &endNode, int* &parent){
    if( startNode == endNode || endNode == -1){
        printf("%d\n", startNode);
    }
    else{
        findPath(startNode, parent[endNode], parent);
        printf("%d\n", endNode);
    }
}

void  bfs()
{
 
    queue<int> q;
    q.push(1);
    dis[1] = 0;
    visited[1] = true;
    int s=1;
    while(!q.empty())
    {
        s = q.front();
        q.pop();
        for(int i=0; i<adj[s].size(); i++)
        {
            int  d = adj[s][i];
            if(!visited[d])
            {
                par[d]=s;
                visited[d] = true;
                dis[d] = dis[s] + 1;
                q.push(d);
            }
        }
    }
 
    return ;
}
