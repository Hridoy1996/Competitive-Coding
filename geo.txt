struct point
{
	int x, y, idx;
};

//Finds squared euclidean distance between two points
int dist(point &a, point &b)
{
	return (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);
}

//Checks if angle ABC is a right angle
int isOrthogonal(point &a, point &b, point &c)
{
	return (b.x-a.x) * (b.x-c.x) + (b.y-a.y) * (b.y-c.y) == 0;
}

//Checks if ABCD form a rectangle (in that order)
int isRectangle(point &a, point &b, point &c, point &d)
{
	return isOrthogonal(a, b, c) && isOrthogonal(b, c, d) && isOrthogonal(c, d, a);
}

//Checks if ABCD form a rectangle, in any orientation
int isRectangleAnyOrder(point &a, point &b, point &c, point &d)
{
	return isRectangle(a, b, c, d) || isRectangle(b, c, a, d) | isRectangle(c, a, b, d);
}

//Checks if ABCD form a square (in that order)
int isSquare(point &a, point &b, point &c, point &d)
{
	return isRectangle(a, b, c, d) && dist(a, b) == dist(b, c);
}

//Checks if ABCD form a square, in any orientation
int isSquareAnyOrder(point &a, point &b, point &c, point &d)
{
	return isSquare(a, b, c, d) || isSquare(b, c, a, d) | isSquare(c, a, b, d);
}
/// pick's theoream
area= 2i+b-2


// The main function that returns true if line segment 'p1q1'
// and 'p2q2' intersect.
struct Point
{ 
    double x,y;
};
bool onSegment(Point p, Point q, Point r)
{
  if (q.x <= max(p.x, r.x) && q.x >= min(p.x, r.x) && q.y <= max(p.y, r.y) && q.y >= min(p.y, r.y))return true;
    return false;
}
int orientation(Point p, Point q, Point r)
{
    int val = (q.y - p.y) * (r.x - q.x) -(q.x - p.x) * (r.y - q.y);
    if (val == 0) return 0;  // colinear
    return (val > 0)? 1: 2; // clock or counterclock wise
}
bool doIntersect(Point p1, Point q1, Point p2, Point q2)
{
    int o1 = orientation(p1, q1, p2);
    int o2 = orientation(p1, q1, q2);
    int o3 = orientation(p2, q2, p1);
    int o4 = orientation(p2, q2, q1);
    if (o1 != o2 && o3 != o4) return true;
    if (o1 == 0 && onSegment(p1, p2, q1)) return true;
    if (o2 == 0 && onSegment(p1, q2, q1)) return true;
    if (o3 == 0 && onSegment(p2, p1, q2)) return true;
    if (o4 == 0 && onSegment(p2, q1, q2)) return true;
    return false;
}
